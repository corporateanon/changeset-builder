version: 2.1

x-defs:
  - &job-setup
    docker:
      - image: cimg/node:14.18
    working_directory: ~/workspace/repo

  - &workspace-persist
    persist_to_workspace:
      root: "~"
      paths:
        - workspace/repo
        - .config/yarn/global
        - bin

  - &workspace-attach
    attach_workspace:
      at: "~"

  - &npm-auth
    run:
      name: Authenticate with NPM registry
      command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ${HOME}/.npmrc

  - &git-user
    run:
      name: Git user
      command: |
        git config user.email "CircleCI"
        git config user.name "CircleCI"

  - &npm-install
    node/install-packages:
      pkg-manager: yarn

  - &yarn-workspaces-info
    run:
      name: Show info about workspaces
      command: yarn workspaces info

  - &git-push
    run:
      name: Commit and push changes to git repository
      command: |
        if [[ -n $(git status --porcelain) ]]; then
          git add .
          git commit -m 'chore(changesets): [ci skip] bump packages versions'
          git push -u origin ${CIRCLE_BRANCH} --follow-tags
        else
          echo "No changes in GIT, not pushing"
        fi

  - &fail-on-pre
    run:
      name: Ensure there is no pre.json
      command: |
        if [[ -f ".changeset/pre.json" ]]; then
          echo "pre.json may only exist in branches starting with pre-release/"
          exit 1
        fi

  - &fail-on-missing-pre
    run:
      name: Ensure there is pre.json
      command: |
        if [[ ! -f ".changeset/pre.json" ]]; then
          echo "pre.json must exist in branches starting with pre-release/"
          exit 1
        fi

  - &filter-only-master
    branches:
      only:
        - master

  - &filter-only-pre-release
    branches:
      only:
        - /pre-release/.*/
        - /pre/.*/

orbs:
  node: circleci/node@4.1

jobs:
  build:
    <<: *job-setup
    steps:
      - checkout
      - *npm-auth
      - *npm-install
      - *yarn-workspaces-info
      - run:
          name: Installing the stable release of itself
          command: |
            yarn global add changeset-releaser --prefix=${HOME}
      - run:
          name: Building changed packages and its dependencies
          command: changeset-releaser build
      - *workspace-persist

  test:
    <<: *job-setup
    steps:
      - *workspace-attach
      - run:
          name: Testing changed packages and its dependents
          command: changeset-releaser test

  release:
    <<: *job-setup
    steps:
      - checkout
      - *workspace-attach
      - *git-user
      - *npm-auth
      - *fail-on-pre
      - *yarn-workspaces-info
      - run:
          name: Check if changesets are present
          command: yarn changeset status
      - run:
          name: Upgrade versions
          command: yarn changeset version
      - run:
          name: Publish packages
          command: yarn changeset publish
      - *git-push

  pre-release:
    <<: *job-setup
    steps:
      - checkout
      - *workspace-attach
      - *git-user
      - *npm-auth
      - *fail-on-missing-pre
      - *yarn-workspaces-info
      - run:
          name: Check if changesets are present
          command: yarn changeset status
      - run:
          name: Upgrade versions
          command: yarn changeset version
      - run:
          name: Publish packages
          command: yarn changeset publish
      - *git-push

workflows:
  build-test-and-deploy:
    jobs:
      # always run
      - build
      - test:
          requires:
            - build

      # release (from master)
      - approve-release:
          type: approval
          filters: *filter-only-master
      - release:
          requires:
            - test
            - approve-release
          filters: *filter-only-master

      # pre-release (from pre/... branch)
      - approve-pre-release:
          type: approval
          filters: *filter-only-pre-release
      - pre-release:
          requires:
            - test
            - approve-pre-release
          filters: *filter-only-pre-release
